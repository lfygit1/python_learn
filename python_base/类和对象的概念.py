"""
 类和对象的概念
类 = 模板 / 图纸
对象 = 按照模板生成的具体实例
类是抽象的，对象是具体的。
Python 中几乎一切都是对象（数字、字符串、函数、类本身都是对象）。

面向过程和面向对象的区别
面向过程就是“以过程（函数）为中心”的编程思想。程序由一系列函数组成，数据通过函数在不同位置之间传递。更像是“流水线”：先做这一步，再做那一步。

特点:强调“怎么做”，把问题分解为一个个步骤（函数），逐步解决。数据和操作是分离的，函数处理数据。
优点:简单直观，逻辑清晰。对于小型程序，开发效率高。
    执行性能通常比 OOP 稍高（少了类和对象的开销）。
缺点:难以复用：函数和数据是分离的，模块化程度不高。
    可维护性差：随着程序变大，函数之间依赖越来越复杂，不好管理。
    扩展性差：新功能可能需要改动很多函数。


面向对象是“以对象为中心”的编程思想。
对象 = 数据（属性）+ 方法（操作） 的集合。强调“谁来做”，而不是“怎么做”。

特点:把现实世界中的事物抽象成类，然后由类创建对象。
    强调 封装、继承、多态 三大特性。

优点:模块化强：对象天然就是一个模块，代码更清晰。
    可扩展性强：通过继承和多态，扩展新功能更容易。
    可维护性好：修改一个类或对象，不会影响太多地方。
    复用性高：类和对象可以重复使用，降低重复代码。

缺点:学习成本较高，比 POP 抽象层次更高。
    开发速度在小项目中可能比 POP 慢。
    程序运行效率相对低一些（对象、方法调用有开销）。

可以理解为：
面向过程像写“菜谱”：一步一步告诉你怎么做。
面向对象像“厨师团队”：每个厨师（对象）负责自己的活，合作完成一道菜。
"""